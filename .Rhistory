class = "integer", settable = F, fittable = F,
stringsAsFactors = F))
expect_silent(ps1$setParameterValue(list(Test = 2)))
expect_error(ps1$setParameterValue(list(Test2 = 2)))
ps2 = as.ParameterSet(data.frame(id = "Test2", value = 2, lower = 1, upper = 5,
class = "integer", settable = T, fittable = F,
stringsAsFactors = F))
expect_silent(ps2$setParameterValue(list(Test = 2)))
expect_silent(ps2$setParameterValue(list(Test2 = 2)))
self = ps2
id <- names(lst)[[i]]
value <- lst[[i]]
param <- self$parameters(as.df = T)[self$parameters(as.df = T)[,"id"] %in% id,]
i = 1
lst = list(Test2  = 2)
id <- names(lst)[[i]]
value <- lst[[i]]
param <- self$parameters(as.df = T)[self$parameters(as.df = T)[,"id"] %in% id,]
id
value
param
lst = list(Test  = 2)
id <- names(lst)[[i]]
value <- lst[[i]]
param <- self$parameters(as.df = T)[self$parameters(as.df = T)[,"id"] %in% id,]
param
length(param)
nrow(param)
devtools::document("/users/raphael/github/distr6")
devtools::load_all("/users/raphael/github/distr6")
source('~/GitHub/distr6/tests/testthat/test-ParameterSet.R')
source('~/GitHub/distr6/tests/testthat/test-ParameterSet.R')
devtools::document("/users/raphael/github/distr6")
devtools::load_all("/users/raphael/github/distr6")
devtools::check("/users/raphael/github/distr6")
source('~/GitHub/distr6/tests/testthat/test-ParameterSet.R')
library(testthat)
context("ParameterSet")
test_that("initialize",{
expect_error(as.ParameterSet(list()))
expect_silent(as.ParameterSet(list(id = "Test", value = 2, lower = 1, upper = 5,
class = "integer", settable = F, fittable = F)))
expect_silent(as.ParameterSet(data.frame(id = "Test", value = 2, lower = 1, upper = 5,
class = "integer", settable = F, fittable = F,
stringsAsFactors = F)))
})
ps1 = as.ParameterSet(data.frame(id = "Test", value = 2, lower = 1, upper = 5,
class = "integer", settable = F, fittable = F,
stringsAsFactors = F))
ps2 = as.ParameterSet(data.frame(id = "Test2", value = 2, lower = 1, upper = 5,
class = "integer", settable = T, fittable = F,
stringsAsFactors = F))
expect_silent(ps1$getParameterValue("Test"))
ps1$getParameterValue("Test")
source('~/GitHub/distr6/tests/testthat/test-ParameterSet.R')
source('~/GitHub/distr6/tests/testthat/test-R6helpers.R')
source('~/GitHub/distr6/tests/testthat/test-R6helpers.R')
devtools::document("/users/raphael/github/distr6")
devtools::load_all("/users/raphael/github/distr6")
devtools::check("/users/raphael/github/distr6")
source('~/GitHub/distr6/tests/testthat/test-R6helpers.R')
source('~/GitHub/distr6/tests/testthat/test-ParameterSet.R')
devtools::document("/users/raphael/github/distr6")
devtools::load_all("/users/raphael/github/distr6")
devtools::check("/users/raphael/github/distr6")
testclass <- R6::R6Class("testclass", public = list(strprint = function() return("Test")))
source('~/GitHub/distr6/tests/testthat/test-ParameterSet.R')
source('~/GitHub/distr6/tests/testthat/test-ParameterSet.R')
testthat::test_dir("/users/raphael/github/distr6")
testthat::test_dir("/users/raphael/github/distr6/r")
testthat::test_dir("/users/raphael/github/distr6/r"/tests)
testthat::test_dir("/users/raphael/github/distr6/r/tests")
testthat::test_dir("/users/raphael/github/distr6/r/tests/testthat")
?testthat::test_dir
test_package("distr6")
source('~/GitHub/distr6/tests/testthat/test-continuousDistribution.R')
continuousTester$getParameterValue("size")
expect_null(continuousTester$getParameterValue("size"), "character")
expect_warning(continuousTester$getParameterValue("size"), "character")
expect_warning(continuousTester$getParameterValue("size"))
decorate(continuousTester, CoreStatistics, FALSE)
continuousTester$iqr
continuousTester$iqr()
continuousTester$quantile()
expect_silent(continuousTester$iqr())
devtools::document("/users/raphael/github/distr6")
devtools::load_all("/users/raphael/github/distr6")
test_package("distr6")
source('~/GitHub/distr6/tests/testthat/test-continuousDistribution.R')
continuousTester$cov()
expect_message(continuousTester$cov())
expect_equal(continuousTester$cov(),continuousTester$var())
devtools::document("/users/raphael/github/distr6")
devtools::load_all("/users/raphael/github/distr6")
test_package("distr6")
source('~/GitHub/distr6/tests/testthat/test-SetIntervalHelpers.R')
setSymbol(posintegers)
class(PosIntegers)
class(posintegers)
#' @usage setSymbol(set)
#'
#' @param set special set
#'
#' @details Special set can be supplied as a character string or class, case-insensitive.
#'   See \code{\link{SpecialSet}} for full list of currently supported sets.
#'
#' @seealso \code{\link{SpecialSet}}
#'
#' @export
setSymbol <- function(set){
if(!inherits(set,"character") | inherits(try(class(posintegers)),"try-catch"))
set = paste0(substitute(set))
set = tolower(set)
return(switch(set,
naturals = "\u2115",
posnaturals = "\u2115+",
integers = "\u2124",
posintegers = "\u2124+",
negintegers = "\u2124-",
rationals = "\u211A",
posrationals = "\u211A+",
negrationals = "\u211A-",
reals = "\u211D",
posreals = "\u211D+",
negreals = "\u211D-",
extendedreals = "\u211D \u222A {-\u221E, +\u221E}",
complex = "\u2102"
))
}
setSymbol(posnaturals)
setSymbol(posnatural)
setSymbol(posnaturals)
source('~/GitHub/distr6/R/SetInterval_helpers.R')
setSymbol(posnaturals)
source('~/GitHub/distr6/R/SetInterval_helpers.R')
setSymbol(posnaturals)
inherits(try(class(set)),"try-catch")
inherits(try(class(posnaturals)),"try-catch")
inherits(try(class(posnaturals),silent=T),"try-catch")
class(try(class(posnaturals),silent=T))
source('~/GitHub/distr6/R/SetInterval_helpers.R')
setSymbol(posnaturals)
source('~/GitHub/distr6/R/SetInterval_helpers.R')
setSymbol(posnaturals)
class(sas)
source('~/GitHub/distr6/R/SetInterval_helpers.R')
source('~/GitHub/distr6/R/SetInterval_helpers.R')
setSymbol(posnaturals)
set=posnaturals
source('~/GitHub/distr6/R/SetInterval_helpers.R')
source('~/GitHub/distr6/R/SetInterval_helpers.R')
setSymbol(posnaturals)
devtools::document("/users/raphael/github/distr6")
devtools::load_all("/users/raphael/github/distr6")
test_package("distr6")
source('~/GitHub/distr6/tests/testthat/test-R6helpers.R')
source('~/GitHub/distr6/tests/testthat/test-R6helpers.R')
devtools::document("/users/raphael/github/distr6")
devtools::load_all("/users/raphael/github/distr6")
test_package("distr6")
source('~/GitHub/distr6/tests/testthat/test-R6helpers.R')
testclass$new()
getR6Class(testclass$new())
devtools::document("/users/raphael/github/distr6")
devtools::load_all("/users/raphael/github/distr6")
test_package("distr6")
source('~/GitHub/distr6/tests/testthat/test-R6helpers.R')
devtools::document("/users/raphael/github/distr6")
devtools::load_all("/users/raphael/github/distr6")
test_package("distr6")
getR6Class
?get
source('~/GitHub/distr6/tests/testthat/test-R6helpers.R')
test_package("distr6")
devtools::document("/users/raphael/github/distr6")
devtools::load_all("/users/raphael/github/distr6")
devtools::check("/users/raphael/github/distr6")
devtools::document("/users/raphael/github/distr6")
devtools::load_all("/users/raphael/github/distr6")
devtools::check("/users/raphael/github/distr6")
devtools::document("/users/raphael/github/distr6")
devtools::load_all("/users/raphael/github/distr6")
devtools::check("/users/raphael/github/distr6")
devtools::document("/users/raphael/github/distr6")
devtools::load_all("/users/raphael/github/distr6")
devtools::check("/users/raphael/github/distr6")
source('~/GitHub/distr6/tests/testthat/test-ParameterSet.R')
source('~/GitHub/distr6/tests/testthat/test-ParameterSet.R')
expect_silent(rbind(Binomial$new()$parameters(),Binomial$new()$parameters()))
expect_error(rbind(Binomial$new()$parameters(),Binomial$new()$parameters()))
expect_silent(Binomial$new()$parameters()$rbind(Exponential$new()$parameters()))
source('~/GitHub/distr6/tests/testthat/test-ParameterSet.R')
devtools::document("/users/raphael/github/distr6")
devtools::load_all("/users/raphael/github/distr6")
devtools::check("/users/raphael/github/distr6")
Binomial$new()$getParameterValue("prob")
library(distr6)
devtools::load_all("/users/raphael/github/distr6")
library(distr6)
Binomial$new()$getParameterValue("prob")
devtools::document("/users/raphael/github/distr6")
devtools::load_all("/users/raphael/github/distr6")
devtools::check("/users/raphael/github/distr6")
devtools::load_all("/users/raphael/github/distr6")
rbind
??rbind.ParameterSet
?rbind.ParameterSet
checkmate::assert(length(id)==length(value), length(id)==length(settable),
length(id)==length(fittable),
length(id)==length(class), length(id)==length(lower),
length(id)==length(upper), combine = "and",
.var.name = "all arguments must be of same length")
if(!is.null(description))
checkmate::assert(length(id)==length(description), .var.name = "all arguments must be of same length")
if(!is.null(updateFunc))
checkmate::assert(length(id)==length(updateFunc), .var.name = "all arguments must be of same length")
checkmate::assert(!any(duplicated(id)), .var.name = "'id's must be unique")
params = data.frame()
for(i in 1:length(id)){
a_id = id[[i]]
checkmate::assertCharacter(a_id,.var.name = "'id' must be character")
checkmate::assert(length(strsplit(a_id," ",fixed=T)[[1]])==1,
.var.name = "'id' must be one word")
a_settable  = settable[[i]]
checkmate::assertLogical(a_settable, .var.name = "'settable' must be logical")
a_fittable  = fittable[[i]]
checkmate::assertLogical(a_fittable, .var.name = "'fittable' must be logical")
a_class = class[[i]]
checkmate::assert(a_class == "numeric", a_class == "integer",
.var.name = "'class' must be one of: 'numeric' or 'integer'")
if(!is.null(description)){
a_description = description[[i]]
if(is.null(a_description)) a_description = "None"
checkmate::assertCharacter(a_description,.var.name = "'description' must be character")
} else
a_description = "None"
if(!is.null(updateFunc)){
a_update = updateFunc[[i]]
if(is.null(a_update))
a_update = NA
} else
a_update = NA
a_lower = ifelse(lower[[i]] == -Inf, lower[[i]], as(lower[[i]], a_class))
a_upper = ifelse(upper[[i]] == Inf, upper[[i]], as(upper[[i]], a_class))
a_value = as(value[[i]], a_class)
checkmate::assert(a_value >= a_lower, a_value <= a_upper, combine = "and",
.var.name = "'value' should be between 'lower' and 'upper'")
a_param = data.frame(id = a_id, value = a_value, lower = a_lower,
upper = a_upper, class = a_class, settable = a_settable,
fittable = a_fittable, description = a_description,
updateFunc = a_update,
stringsAsFactors = F)
params =
lsf.str("package:distr6")
lsf.str("package:distr6")
getAnywhere(rbind.ParameterSet)
devtools::load_all("/users/raphael/github/distr6")
?rbind
isGeneric("rbind")
isGeneric(rbind)
rbind.ParameterSet <- function(x,...){
x$rbind(...)
}
library(testthat)
context("ParameterSet")
as.ParameterSet(list(id = "Test", value = 2, lower = 1, upper = 5,
class = "integer", settable = F, fittable = F))
ps1 = devtools::load_all("/users/raphael/github/distr6")
ps1 = as.ParameterSet(list(id = "Test", value = 2, lower = 1, upper = 5,
class = "integer", settable = F, fittable = F))
ps2 = as.ParameterSet(data.frame(id = "Test", value = 2, lower = 1, upper = 5,
class = "integer", settable = F, fittable = F,
stringsAsFactors = F))
rbind(ps1,ps2)
source('~/GitHub/R62S3/R/R62S3.R')
devtools::load_all("/users/raphael/github/distr6")
source('~/GitHub/R62S3/R/R62S3.R')
devtools::load_all("/users/raphael/github/distr6")
valueSupport(Binomial$new())
valueSupport.Distribution(Binomial$new())
valueSupport.Distribution(Binomial$new())
valueSupport(Binomial$new())
class(Binomial$new())
valueSupport(Distribution$new("test",pdf=dbinom))
valueSupport.Distribution(Distribution$new("test",pdf=dbinom))
median.Distribution(Distribution$new("test",pdf=dbinom))
median(Distribution$new("test",pdf=dbinom))
isGeneric("median")
isGeneric(median)
isS3stdGeneric("cbind")
isS3stdGeneric(cbind)
isS3stdGeneric("rbind")
isS3stdGeneric(rbind)
isS3method("rbind")
isS3method(f="rbind")
isS3method(f=rbind)
methods("rbind")
methods(rbind)
?methods
methods(rbind)
methods(rbind)
suppressWarnings(suppressMessages((try(methods(rbind),silent=T))))
devtools::load_all("/users/raphael/github/distr6")
obj = ParameterSet
methods = obj$public_methods[!(names(obj$public_methods) %in% c("initialize","clone"))]
methods
length(methods)
i  = 6
methodname = names(methods)[[i]]
methodname
getter = get0(methodname, envir = getEnvir)
getEnvir = "package:distr6"
getter = get0(methodname, envir = getEnvir)
getEnvir = as.environment("package:distr6")
getter = get0(methodname, envir = getEnvir)
getter
getEnvir
getter
x = FALSE
generic = FALSE
!is.null(getter)
x = suppressWarnings(suppressMessages((try(methods(getter),silent=T))))
x
methods(getter)
getter
name(getters)
getter
methodname
methods(methodname)
x = suppressWarnings(suppressMessages((try(methods(methodname),silent=T))))
x
class(x)!="try-error"
x = suppressWarnings(suppressMessages(methods(methodname)))
x
length(x) > 0
methods("rbind")
methods("rbindas")
methodname
generic = FALSE
x = suppressWarnings(suppressMessages((try(methods(methodname),silent=T))))
x
class(x)!="try-error"
length(x) > 0
generic = TRUE
!generic
y = "Distribution"
method = paste(methodname,y$classname,sep=".")
y = Distribution
method = paste(methodname,y$classname,sep=".")
method
value = function(x, ...){}
value
body(value) = substitute({
args = list(...)
do.call(x[[method]], args)
},list(method=methodname))
value
paste0(method)
source('~/GitHub/R62S3/R/R62S3.R')
devtools::load_all("/users/raphael/github/distr6")
devtools::load_all("/users/raphael/github/distr6")
rbind(data.frame(a),data.frame(b))
rbind(data.frame(1),data.frame(2))
rbind(data.frame(a=1),data.frame(a=2))
median(Binomial$new())
median(Binomial$new())
source('~/GitHub/R62S3/R/R62S3.R')
printMachine <- R6::R6Class("printMachine",
public = list(initialize = function() {},
printer = function(str) {print(str)}))
pm <- printMachine$new()
R62S3(printMachine)
pm$printer("Test String A")
printer(pm, "Test String B"
)
devtools::document("/users/raphael/github/R62S3")
devtools::load_all("/users/raphael/github/R62S3")
devtools::check("/users/raphael/github/R62S3")
methods(lbind)
methods("lbind")
methods("rbind")
devtools::document("/users/raphael/github/R62S3")
devtools::load_all("/users/raphael/github/R62S3")
devtools::check("/users/raphael/github/R62S3")
devtools::document("/users/raphael/github/R62S3")
devtools::load_all("/users/raphael/github/R62S3")
devtools::check("/users/raphael/github/R62S3")
nogen <- R6::R6Class("nogen",public = list(lbind = function() return("Test No Gen")))
test_that("no generic",{
expect_silent(R62S3(nogen))
expect_equal(lbind(nogen), "Test No Gen")
})
expect_silent(R62S3(nogen))
expect_equal(lbind(nogen$new()), "Test No Gen")
expect_silent(get("lbind"))
expect_silent(get("lbind.nogen"))
expect_silent(R62S3(gen))
gen <- R6::R6Class("gen",public = list(rbind = function() return("Test Gen")))
expect_silent(R62S3(gen))
expect_equal(rbind(gen$new()), "Test Gen")
expect_silent(get("rbind.gen"))
expect_silent(get("rbind"))
devtools::document("/users/raphael/github/R62S3")
devtools::load_all("/users/raphael/github/R62S3")
devtools::check("/users/raphael/github/R62S3")
devtools::document("/users/raphael/github/R62S3")
devtools::load_all("/users/raphael/github/R62S3")
devtools::check("/users/raphael/github/R62S3")
devtools::build_wi
?devtools::build_win
check_win_devel("distr6")
devtools::check_win_devel("R62S3")
devtools::check_win_devel(R62S3)
devtools::check_win_devel("/users/raphael/github/r62s3")
devtools::check_win_release("/users/raphael/github/r62s3")
devtools::revdep("/users/raphael/github/r62s3")
devtools::load_all("/users/raphael/github/distr6")
devtools::load_all("/users/raphael/github/distr6")
ls(name=parent.env(environment()))
devtools::load_all("/users/raphael/github/distr6")
devtools::load_all("/users/raphael/github/distr6")
devtools::load_all("/users/raphael/github/distr6")
devtools::load_all("/users/raphael/github/distr6")
devtools::load_all("/users/raphael/github/distr6")
devtools::load_all("/users/raphael/github/distr6")
devtools::load_all("/users/raphael/github/distr6")
R62S3::R62S3
R62S3::R62S3
devtools::load_all("/users/raphael/github/distr6")
SpecialSet
SpecialSet$new()
devtools::load_all("/users/raphael/github/distr6")
devtools::load_all("/users/raphael/github/distr6")
source('~/GitHub/R62S3/R/R62S3.R')
source('~/GitHub/R62S3/R/R62S3.R')
devtools::load_all("/users/raphael/github/distr6")
devtools::load_all("/users/raphael/github/distr6")
source('~/GitHub/R62S3/R/R62S3.R')
devtools::load_all("/users/raphael/github/distr6")
source('~/GitHub/R62S3/R/R62S3.R')
devtools::load_all("/users/raphael/github/distr6")
dimension.setInterval
dimension
SetInterval$new()
SetInterval$new(1)
SetInterval$new(1,2)
SetInterval$new(1,2,3)
SetInterval$new(1,2,3,4)
SetInterval$new(1,2,3,4,2)
dimension(SetInterval$new(1,2,3,4,2))
source('~/GitHub/R62S3/R/R62S3.R')
devtools::load_all("/users/raphael/github/distr6")
as.environment("package:distr6")
source('~/GitHub/distr6/R/zzz.R')
devtools::load_all("/users/raphael/github/distr6")
devtools::load_all("/users/raphael/github/distr6")
devtools::load_all("/users/raphael/github/distr6")
source('~/GitHub/distr6/R/zzz.R')
devtools::load_all("/users/raphael/github/distr6")
source('~/GitHub/R62S3/R/R62S3.R')
devtools::load_all("/users/raphael/github/distr6")
devtools::load_all("/users/raphael/github/distr6")
devtools::load_all("/users/raphael/github/distr6")
source('~/GitHub/R62S3/R/R62S3.R')
devtools::load_all("/users/raphael/github/distr6")
devtools::load_all("/users/raphael/github/distr6")
R62S3(SetInterval)
R62S3(SetInterval, getEnvir = "package:distr6")
R62S3(SetInterval, getEnvir = "package:distr6", assignEnvir = "package:distr6")
source('~/GitHub/R62S3/R/R62S3.R')
R62S3(SetInterval, assignEnvir = "package:distr6")
R62S3(SetInterval, assignEnvir = as.environment("package:distr6"))
devtools::load_all("/users/raphael/github/distr6")
devtools::load_all("/users/raphael/github/distr6")
devtools::load_all("/users/raphael/github/distr6")
devtools::document("/users/raphael/github/R62S3")
devtools::load_all("/users/raphael/github/R62S3")
devtools::check("/users/raphael/github/R62S3")
devtools::load_all("/users/raphael/github/distr6")
devtools::load_all("/users/raphael/github/distr6")
devtools::load_all("/users/raphael/github/distr6")
devtools::load_all("/users/raphael/github/distr6")
devtools::load_all("/users/raphael/github/distr6")
source('~/GitHub/R62S3/R/R62S3.R')
devtools::load_all("/users/raphael/github/distr6")
devtools::load_all("/users/raphael/github/distr6")
devtools::load_all("/users/raphael/github/distr6")
devtools::document("/users/raphael/github/R62S3")
devtools::load_all("/users/raphael/github/R62S3")
devtools::check("/users/raphael/github/R62S3")
devtools::document("/users/raphael/github/R62S3")
devtools::load_all("/users/raphael/github/R62S3")
devtools::check("/users/raphael/github/R62S3")
devtools::document("/users/raphael/github/R62S3")
devtools::load_all("/users/raphael/github/R62S3")
devtools::check("/users/raphael/github/R62S3")
devtools::check_win_devel("/users/raphael/github/r62s3")
devtools::check_win_release("/users/raphael/github/r62s3")
devtools::check_win_oldrelease("/users/raphael/github/r62s3")
devtools::check_win_oldrelease("/users/raphael/github/r62s3")
devtools::check_win_release("/users/raphael/github/r62s3")
devtools::check_win_devel("/users/raphael/github/r62s3")
devtools::release("/users/raphael/github/r62s3")
install.packages(c("cluster", "nlme"))
devtools::release("/users/raphael/github/r62s3")
install.packages("devtools")
devtools::release("/users/raphael/github/r62s3")
setwd("~/GitHub/R62S3")
install.packages("pkgdown")
pkgdown::build_site()
pkgdown::build_site()
?pkgdown::build_site
